{
    "swagger": "2.0",
    "info": {
        "title": "Laravel Generator APIs",
        "version": "1.0.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/attributes": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Get a listing of the Attributes.",
                "description": "Get all Attributes",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Attribute"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Store a newly created Attribute in storage",
                "description": "Store Attribute",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Attribute that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Attribute"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Attribute"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/attributes/{id}": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Display the specified Attribute",
                "description": "Get Attribute",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Attribute",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Attribute"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Update the specified Attribute in storage",
                "description": "Update Attribute",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Attribute",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Attribute that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Attribute"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Attribute"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Remove the specified Attribute from storage",
                "description": "Delete Attribute",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Attribute",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/attribute-sets": {
            "get": {
                "tags": [
                    "AttributeSet"
                ],
                "summary": "Get a listing of the AttributeSets.",
                "description": "Get all AttributeSets",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AttributeSet"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AttributeSet"
                ],
                "summary": "Store a newly created AttributeSet in storage",
                "description": "Store AttributeSet",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "AttributeSet that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AttributeSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/AttributeSet"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/attribute-sets/{id}": {
            "get": {
                "tags": [
                    "AttributeSet"
                ],
                "summary": "Display the specified AttributeSet",
                "description": "Get AttributeSet",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of AttributeSet",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/AttributeSet"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AttributeSet"
                ],
                "summary": "Update the specified AttributeSet in storage",
                "description": "Update AttributeSet",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of AttributeSet",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "AttributeSet that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AttributeSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/AttributeSet"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AttributeSet"
                ],
                "summary": "Remove the specified AttributeSet from storage",
                "description": "Delete AttributeSet",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of AttributeSet",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get a listing of the Categories.",
                "description": "Get all Categories",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Store a newly created Category in storage",
                "description": "Store Category",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Category that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Category"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Display the specified Category",
                "description": "Get Category",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Category",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Category"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update the specified Category in storage",
                "description": "Update Category",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Category",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Category that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Category"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Remove the specified Category from storage",
                "description": "Delete Category",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Category",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/channels": {
            "get": {
                "tags": [
                    "Channel"
                ],
                "summary": "Get a listing of the Channels.",
                "description": "Get all Channels",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Channel"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Channel"
                ],
                "summary": "Store a newly created Channel in storage",
                "description": "Store Channel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Channel that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Channel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Channel"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/channels/{id}": {
            "get": {
                "tags": [
                    "Channel"
                ],
                "summary": "Display the specified Channel",
                "description": "Get Channel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Channel",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Channel"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Channel"
                ],
                "summary": "Update the specified Channel in storage",
                "description": "Update Channel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Channel",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Channel that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Channel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Channel"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Channel"
                ],
                "summary": "Remove the specified Channel from storage",
                "description": "Delete Channel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Channel",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/configs": {
            "get": {
                "tags": [
                    "Config"
                ],
                "summary": "Get a listing of the Configs.",
                "description": "Get all Configs",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Config"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Config"
                ],
                "summary": "Store a newly created Config in storage",
                "description": "Store Config",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Config that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Config"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/configs/{id}": {
            "get": {
                "tags": [
                    "Config"
                ],
                "summary": "Display the specified Config",
                "description": "Get Config",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Config",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Config"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Config"
                ],
                "summary": "Update the specified Config in storage",
                "description": "Update Config",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Config",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Config that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Config"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Config"
                ],
                "summary": "Remove the specified Config from storage",
                "description": "Delete Config",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Config",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get a listing of the Countries.",
                "description": "Get all Countries",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Country"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Store a newly created Country in storage",
                "description": "Store Country",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Country that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Country"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/countries/{id}": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Display the specified Country",
                "description": "Get Country",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Country",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Country"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Country"
                ],
                "summary": "Update the specified Country in storage",
                "description": "Update Country",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Country",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Country that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Country"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Country"
                ],
                "summary": "Remove the specified Country from storage",
                "description": "Delete Country",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Country",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/country-states": {
            "get": {
                "tags": [
                    "CountryState"
                ],
                "summary": "Get a listing of the CountryStates.",
                "description": "Get all CountryStates",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CountryState"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CountryState"
                ],
                "summary": "Store a newly created CountryState in storage",
                "description": "Store CountryState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "CountryState that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CountryState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/CountryState"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/country-states/{id}": {
            "get": {
                "tags": [
                    "CountryState"
                ],
                "summary": "Display the specified CountryState",
                "description": "Get CountryState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of CountryState",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/CountryState"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CountryState"
                ],
                "summary": "Update the specified CountryState in storage",
                "description": "Update CountryState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of CountryState",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "CountryState that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CountryState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/CountryState"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CountryState"
                ],
                "summary": "Remove the specified CountryState from storage",
                "description": "Delete CountryState",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of CountryState",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get a listing of the Customers.",
                "description": "Get all Customers",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Customer"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Store a newly created Customer in storage",
                "description": "Store Customer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Customer that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Customer"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/customers/{id}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Display the specified Customer",
                "description": "Get Customer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Customer",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Customer"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Customer"
                ],
                "summary": "Update the specified Customer in storage",
                "description": "Update Customer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Customer",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Customer that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Customer"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customer"
                ],
                "summary": "Remove the specified Customer from storage",
                "description": "Delete Customer",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Customer",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/integrations": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Get a listing of the Integrations.",
                "description": "Get all Integrations",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Integration"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "Store a newly created Integration in storage",
                "description": "Store Integration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Integration that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Integration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Integration"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/integrations/{id}": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Display the specified Integration",
                "description": "Get Integration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Integration",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Integration"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Integration"
                ],
                "summary": "Update the specified Integration in storage",
                "description": "Update Integration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Integration",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Integration that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Integration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Integration"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Integration"
                ],
                "summary": "Remove the specified Integration from storage",
                "description": "Delete Integration",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Integration",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/integration-models": {
            "get": {
                "tags": [
                    "IntegrationModel"
                ],
                "summary": "Get a listing of the IntegrationModels.",
                "description": "Get all IntegrationModels",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/IntegrationModel"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "IntegrationModel"
                ],
                "summary": "Store a newly created IntegrationModel in storage",
                "description": "Store IntegrationModel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "IntegrationModel that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/IntegrationModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/IntegrationModel"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/integration-models/{id}": {
            "get": {
                "tags": [
                    "IntegrationModel"
                ],
                "summary": "Display the specified IntegrationModel",
                "description": "Get IntegrationModel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of IntegrationModel",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/IntegrationModel"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "IntegrationModel"
                ],
                "summary": "Update the specified IntegrationModel in storage",
                "description": "Update IntegrationModel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of IntegrationModel",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "IntegrationModel that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/IntegrationModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/IntegrationModel"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "IntegrationModel"
                ],
                "summary": "Remove the specified IntegrationModel from storage",
                "description": "Delete IntegrationModel",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of IntegrationModel",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/inventory-sources": {
            "get": {
                "tags": [
                    "InventorySource"
                ],
                "summary": "Get a listing of the InventorySources.",
                "description": "Get all InventorySources",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InventorySource"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "InventorySource"
                ],
                "summary": "Store a newly created InventorySource in storage",
                "description": "Store InventorySource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "InventorySource that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InventorySource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/InventorySource"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/inventory-sources/{id}": {
            "get": {
                "tags": [
                    "InventorySource"
                ],
                "summary": "Display the specified InventorySource",
                "description": "Get InventorySource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of InventorySource",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/InventorySource"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "InventorySource"
                ],
                "summary": "Update the specified InventorySource in storage",
                "description": "Update InventorySource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of InventorySource",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "InventorySource that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InventorySource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/InventorySource"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "InventorySource"
                ],
                "summary": "Remove the specified InventorySource from storage",
                "description": "Delete InventorySource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of InventorySource",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/invoices": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Get a listing of the Invoices.",
                "description": "Get all Invoices",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Invoice"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Store a newly created Invoice in storage",
                "description": "Store Invoice",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Invoice that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Invoice"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/invoices/{id}": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Display the specified Invoice",
                "description": "Get Invoice",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Invoice",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Invoice"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Update the specified Invoice in storage",
                "description": "Update Invoice",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Invoice",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Invoice that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Invoice"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Remove the specified Invoice from storage",
                "description": "Delete Invoice",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Invoice",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get a listing of the Orders.",
                "description": "Get all Orders",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Order"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Store a newly created Order in storage",
                "description": "Store Order",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Order that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Order"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Display the specified Order",
                "description": "Get Order",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Order",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Order"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Update the specified Order in storage",
                "description": "Update Order",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Order",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Order that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Order"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "Remove the specified Order from storage",
                "description": "Delete Order",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Order",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get a listing of the Products.",
                "description": "Get all Products",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Product"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Store a newly created Product in storage",
                "description": "Store Product",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Product that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Product"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Display the specified Product",
                "description": "Get Product",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Product",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Product"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update the specified Product in storage",
                "description": "Update Product",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Product",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Product that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Product"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Remove the specified Product from storage",
                "description": "Delete Product",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Product",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/refunds": {
            "get": {
                "tags": [
                    "Refund"
                ],
                "summary": "Get a listing of the Refunds.",
                "description": "Get all Refunds",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Refund"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Refund"
                ],
                "summary": "Store a newly created Refund in storage",
                "description": "Store Refund",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Refund that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Refund"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Refund"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/refunds/{id}": {
            "get": {
                "tags": [
                    "Refund"
                ],
                "summary": "Display the specified Refund",
                "description": "Get Refund",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Refund",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Refund"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Refund"
                ],
                "summary": "Update the specified Refund in storage",
                "description": "Update Refund",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Refund",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Refund that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Refund"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Refund"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Refund"
                ],
                "summary": "Remove the specified Refund from storage",
                "description": "Delete Refund",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Refund",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/shipments": {
            "get": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Get a listing of the Shipments.",
                "description": "Get all Shipments",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Shipment"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Store a newly created Shipment in storage",
                "description": "Store Shipment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Shipment that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Shipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Shipment"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/shipments/{id}": {
            "get": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Display the specified Shipment",
                "description": "Get Shipment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Shipment",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Shipment"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Update the specified Shipment in storage",
                "description": "Update Shipment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Shipment",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Shipment that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Shipment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Shipment"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Remove the specified Shipment from storage",
                "description": "Delete Shipment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Shipment",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/subscribers": {
            "get": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "Get a listing of the Subscribers.",
                "description": "Get all Subscribers",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Subscriber"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "Store a newly created Subscriber in storage",
                "description": "Store Subscriber",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Subscriber that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Subscriber"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Subscriber"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/subscribers/{id}": {
            "get": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "Display the specified Subscriber",
                "description": "Get Subscriber",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Subscriber",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Subscriber"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "Update the specified Subscriber in storage",
                "description": "Update Subscriber",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Subscriber",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Subscriber that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Subscriber"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Subscriber"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "Remove the specified Subscriber from storage",
                "description": "Delete Subscriber",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Subscriber",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tax-categories": {
            "get": {
                "tags": [
                    "TaxCategory"
                ],
                "summary": "Get a listing of the TaxCategories.",
                "description": "Get all TaxCategories",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaxCategory"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TaxCategory"
                ],
                "summary": "Store a newly created TaxCategory in storage",
                "description": "Store TaxCategory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "TaxCategory that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TaxCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/TaxCategory"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tax-categories/{id}": {
            "get": {
                "tags": [
                    "TaxCategory"
                ],
                "summary": "Display the specified TaxCategory",
                "description": "Get TaxCategory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of TaxCategory",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/TaxCategory"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TaxCategory"
                ],
                "summary": "Update the specified TaxCategory in storage",
                "description": "Update TaxCategory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of TaxCategory",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "TaxCategory that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TaxCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/TaxCategory"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TaxCategory"
                ],
                "summary": "Remove the specified TaxCategory from storage",
                "description": "Delete TaxCategory",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of TaxCategory",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tax-rates": {
            "get": {
                "tags": [
                    "TaxRate"
                ],
                "summary": "Get a listing of the TaxRates.",
                "description": "Get all TaxRates",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TaxRate"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TaxRate"
                ],
                "summary": "Store a newly created TaxRate in storage",
                "description": "Store TaxRate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "TaxRate that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TaxRate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/TaxRate"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tax-rates/{id}": {
            "get": {
                "tags": [
                    "TaxRate"
                ],
                "summary": "Display the specified TaxRate",
                "description": "Get TaxRate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of TaxRate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/TaxRate"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TaxRate"
                ],
                "summary": "Update the specified TaxRate in storage",
                "description": "Update TaxRate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of TaxRate",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "TaxRate that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TaxRate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/TaxRate"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TaxRate"
                ],
                "summary": "Remove the specified TaxRate from storage",
                "description": "Delete TaxRate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of TaxRate",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tenants": {
            "get": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Get a listing of the Tenants.",
                "description": "Get all Tenants",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Tenant"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Store a newly created Tenant in storage",
                "description": "Store Tenant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Tenant that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Tenant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Tenant"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/tenants/{id}": {
            "get": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Display the specified Tenant",
                "description": "Get Tenant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Tenant",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Tenant"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Update the specified Tenant in storage",
                "description": "Update Tenant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Tenant",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Tenant that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Tenant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/Tenant"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Remove the specified Tenant from storage",
                "description": "Delete Tenant",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Tenant",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a listing of the Users.",
                "description": "Get all Users",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Store a newly created User in storage",
                "description": "Store User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User that should be stored",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Display the specified User",
                "description": "Get User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update the specified User in storage",
                "description": "Update User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User that should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Remove the specified User from storage",
                "description": "Delete User",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "properties": {
                                "success": {
                                    "type": "boolean"
                                },
                                "data": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Attribute": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "description": "code",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "validation": {
                    "description": "validation",
                    "type": "string"
                },
                "position": {
                    "description": "position",
                    "type": "integer",
                    "format": "int32"
                },
                "is_required": {
                    "description": "is_required",
                    "type": "boolean"
                },
                "is_unique": {
                    "description": "is_unique",
                    "type": "boolean"
                },
                "value_per_channel": {
                    "description": "value_per_channel",
                    "type": "boolean"
                },
                "is_filterable": {
                    "description": "is_filterable",
                    "type": "boolean"
                },
                "is_configurable": {
                    "description": "is_configurable",
                    "type": "boolean"
                },
                "is_user_defined": {
                    "description": "is_user_defined",
                    "type": "boolean"
                },
                "is_visible_on_front": {
                    "description": "is_visible_on_front",
                    "type": "boolean"
                },
                "use_in_flat": {
                    "description": "use_in_flat",
                    "type": "boolean"
                },
                "swatch_type": {
                    "description": "swatch_type",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AttributeSet": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "description": "code",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "status": {
                    "description": "status",
                    "type": "boolean"
                },
                "is_user_defined": {
                    "description": "is_user_defined",
                    "type": "boolean"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AttributeSet": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "position": {
                    "description": "position",
                    "type": "integer",
                    "format": "int32"
                },
                "is_user_defined": {
                    "description": "is_user_defined",
                    "type": "boolean"
                },
                "attribute_set_id": {
                    "description": "attribute_set_id",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AttributeOption": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "sort_order": {
                    "description": "sort_order",
                    "type": "integer",
                    "format": "int32"
                },
                "attribute_id": {
                    "description": "attribute_id",
                    "type": "integer",
                    "format": "int32"
                },
                "swatch_value": {
                    "description": "swatch_value",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Category": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "slug": {
                    "description": "slug",
                    "type": "string"
                },
                "position": {
                    "description": "position",
                    "type": "integer",
                    "format": "int32"
                },
                "image": {
                    "description": "image",
                    "type": "string"
                },
                "status": {
                    "description": "status",
                    "type": "boolean"
                },
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "meta_title": {
                    "description": "meta_title",
                    "type": "string"
                },
                "meta_description": {
                    "description": "meta_description",
                    "type": "string"
                },
                "meta_keywords": {
                    "description": "meta_keywords",
                    "type": "string"
                },
                "category_id": {
                    "description": "category_id",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "_lft": {
                    "description": "_lft",
                    "type": "integer",
                    "format": "int32"
                },
                "_rgt": {
                    "description": "_rgt",
                    "type": "integer",
                    "format": "int32"
                },
                "parent_id": {
                    "description": "parent_id",
                    "type": "integer",
                    "format": "int32"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Channel": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "description": "code",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "timezone": {
                    "description": "timezone",
                    "type": "string"
                },
                "hostname": {
                    "description": "hostname",
                    "type": "string"
                },
                "logo": {
                    "description": "logo",
                    "type": "string"
                },
                "favicon": {
                    "description": "favicon",
                    "type": "string"
                },
                "home_page_content": {
                    "description": "home_page_content",
                    "type": "string"
                },
                "home_seo": {
                    "description": "home_seo",
                    "type": "string"
                },
                "footer_content": {
                    "description": "footer_content",
                    "type": "string"
                },
                "root_category_id": {
                    "description": "root_category_id",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Config": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "description": "code",
                    "type": "string"
                },
                "value": {
                    "description": "value",
                    "type": "string"
                },
                "channel_code": {
                    "description": "channel_code",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Country": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "description": "code",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                }
            }
        },
        "CountryState": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "country_code": {
                    "description": "country_code",
                    "type": "string"
                },
                "code": {
                    "description": "code",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "country_id": {
                    "description": "country_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Customer": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "channel_id": {
                    "description": "channel_id",
                    "type": "integer",
                    "format": "int32"
                },
                "first_name": {
                    "description": "first_name",
                    "type": "string"
                },
                "last_name": {
                    "description": "last_name",
                    "type": "string"
                },
                "gender": {
                    "description": "gender",
                    "type": "string"
                },
                "birthdate": {
                    "description": "birthdate",
                    "type": "string",
                    "format": "date"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "status": {
                    "description": "status",
                    "type": "boolean"
                },
                "customer_group_id": {
                    "description": "customer_group_id",
                    "type": "integer",
                    "format": "int32"
                },
                "subscribed_to_news_letter": {
                    "description": "subscribed_to_news_letter",
                    "type": "boolean"
                },
                "phone": {
                    "description": "phone",
                    "type": "string"
                },
                "notes": {
                    "description": "notes",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "CustomerAddress": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "customer_id": {
                    "description": "customer_id",
                    "type": "integer",
                    "format": "int32"
                },
                "address1": {
                    "description": "address1",
                    "type": "string"
                },
                "address2": {
                    "description": "address2",
                    "type": "string"
                },
                "country": {
                    "description": "country",
                    "type": "string"
                },
                "state": {
                    "description": "state",
                    "type": "string"
                },
                "city": {
                    "description": "city",
                    "type": "string"
                },
                "postcode": {
                    "description": "postcode",
                    "type": "string"
                },
                "phone": {
                    "description": "phone",
                    "type": "string"
                },
                "default_address": {
                    "description": "default_address",
                    "type": "boolean"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "Integration": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "from": {
                    "description": "from",
                    "type": "string"
                },
                "local": {
                    "description": "local",
                    "type": "string"
                },
                "to": {
                    "description": "to",
                    "type": "string"
                },
                "mapping": {
                    "description": "mapping",
                    "type": "string"
                },
                "header_params": {
                    "description": "header_params",
                    "type": "string"
                },
                "query_params": {
                    "description": "query_params",
                    "type": "string"
                },
                "active": {
                    "description": "active",
                    "type": "boolean"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "IntegrationModel": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "select_command": {
                    "description": "select_command",
                    "type": "string"
                },
                "select_columns": {
                    "description": "select_columns",
                    "type": "string"
                },
                "insert_command": {
                    "description": "insert_command",
                    "type": "string"
                },
                "insert_columns": {
                    "description": "insert_columns",
                    "type": "string"
                },
                "update_command": {
                    "description": "update_command",
                    "type": "string"
                },
                "update_columns": {
                    "description": "update_columns",
                    "type": "string"
                },
                "delete_command": {
                    "description": "delete_command",
                    "type": "string"
                },
                "delete_columns": {
                    "description": "delete_columns",
                    "type": "string"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "InventorySource": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "description": "code",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "contact_name": {
                    "description": "contact_name",
                    "type": "string"
                },
                "contact_email": {
                    "description": "contact_email",
                    "type": "string"
                },
                "contact_number": {
                    "description": "contact_number",
                    "type": "string"
                },
                "contact_fax": {
                    "description": "contact_fax",
                    "type": "string"
                },
                "country": {
                    "description": "country",
                    "type": "string"
                },
                "state": {
                    "description": "state",
                    "type": "string"
                },
                "city": {
                    "description": "city",
                    "type": "string"
                },
                "street": {
                    "description": "street",
                    "type": "string"
                },
                "postcode": {
                    "description": "postcode",
                    "type": "string"
                },
                "priority": {
                    "description": "priority",
                    "type": "integer",
                    "format": "int32"
                },
                "latitude": {
                    "description": "latitude",
                    "type": "number",
                    "format": "number"
                },
                "longitude": {
                    "description": "longitude",
                    "type": "number",
                    "format": "number"
                },
                "status": {
                    "description": "status",
                    "type": "boolean"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Invoice": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "increment_id": {
                    "description": "increment_id",
                    "type": "string"
                },
                "state": {
                    "description": "state",
                    "type": "string"
                },
                "email_sent": {
                    "description": "email_sent",
                    "type": "boolean"
                },
                "total_qty": {
                    "description": "total_qty",
                    "type": "integer",
                    "format": "int32"
                },
                "sub_total": {
                    "description": "sub_total",
                    "type": "number",
                    "format": "number"
                },
                "base_sub_total": {
                    "description": "base_sub_total",
                    "type": "number",
                    "format": "number"
                },
                "grand_total": {
                    "description": "grand_total",
                    "type": "number",
                    "format": "number"
                },
                "base_grand_total": {
                    "description": "base_grand_total",
                    "type": "number",
                    "format": "number"
                },
                "shipping_amount": {
                    "description": "shipping_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_shipping_amount": {
                    "description": "base_shipping_amount",
                    "type": "number",
                    "format": "number"
                },
                "tax_amount": {
                    "description": "tax_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_tax_amount": {
                    "description": "base_tax_amount",
                    "type": "number",
                    "format": "number"
                },
                "discount_amount": {
                    "description": "discount_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_discount_amount": {
                    "description": "base_discount_amount",
                    "type": "number",
                    "format": "number"
                },
                "order_id": {
                    "description": "order_id",
                    "type": "integer",
                    "format": "int32"
                },
                "order_address_id": {
                    "description": "order_address_id",
                    "type": "integer",
                    "format": "int32"
                },
                "transaction_id": {
                    "description": "transaction_id",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "InvoiceItem": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "sku": {
                    "description": "sku",
                    "type": "string"
                },
                "qty": {
                    "description": "qty",
                    "type": "integer",
                    "format": "int32"
                },
                "price": {
                    "description": "price",
                    "type": "number",
                    "format": "number"
                },
                "base_price": {
                    "description": "base_price",
                    "type": "number",
                    "format": "number"
                },
                "total": {
                    "description": "total",
                    "type": "number",
                    "format": "number"
                },
                "base_total": {
                    "description": "base_total",
                    "type": "number",
                    "format": "number"
                },
                "tax_amount": {
                    "description": "tax_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_tax_amount": {
                    "description": "base_tax_amount",
                    "type": "number",
                    "format": "number"
                },
                "product_id": {
                    "description": "product_id",
                    "type": "integer",
                    "format": "int32"
                },
                "product_type": {
                    "description": "product_type",
                    "type": "string"
                },
                "order_item_id": {
                    "description": "order_item_id",
                    "type": "integer",
                    "format": "int32"
                },
                "invoice_id": {
                    "description": "invoice_id",
                    "type": "integer",
                    "format": "int32"
                },
                "parent_id": {
                    "description": "parent_id",
                    "type": "integer",
                    "format": "int32"
                },
                "additional": {
                    "description": "additional",
                    "type": "string"
                },
                "discount_percent": {
                    "description": "discount_percent",
                    "type": "number",
                    "format": "number"
                },
                "discount_amount": {
                    "description": "discount_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_discount_amount": {
                    "description": "base_discount_amount",
                    "type": "number",
                    "format": "number"
                }
            }
        },
        "Order": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "increment_id": {
                    "description": "increment_id",
                    "type": "string"
                },
                "status": {
                    "description": "status",
                    "type": "string"
                },
                "channel_name": {
                    "description": "channel_name",
                    "type": "string"
                },
                "is_guest": {
                    "description": "is_guest",
                    "type": "boolean"
                },
                "customer_email": {
                    "description": "customer_email",
                    "type": "string"
                },
                "customer_first_name": {
                    "description": "customer_first_name",
                    "type": "string"
                },
                "customer_last_name": {
                    "description": "customer_last_name",
                    "type": "string"
                },
                "shipping_method": {
                    "description": "shipping_method",
                    "type": "string"
                },
                "shipping_title": {
                    "description": "shipping_title",
                    "type": "string"
                },
                "shipping_description": {
                    "description": "shipping_description",
                    "type": "string"
                },
                "coupon_code": {
                    "description": "coupon_code",
                    "type": "string"
                },
                "is_gift": {
                    "description": "is_gift",
                    "type": "boolean"
                },
                "total_item_count": {
                    "description": "total_item_count",
                    "type": "integer",
                    "format": "int32"
                },
                "total_qty_ordered": {
                    "description": "total_qty_ordered",
                    "type": "integer",
                    "format": "int32"
                },
                "grand_total": {
                    "description": "grand_total",
                    "type": "number",
                    "format": "number"
                },
                "base_grand_total": {
                    "description": "base_grand_total",
                    "type": "number",
                    "format": "number"
                },
                "grand_total_invoiced": {
                    "description": "grand_total_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "base_grand_total_invoiced": {
                    "description": "base_grand_total_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "grand_total_refunded": {
                    "description": "grand_total_refunded",
                    "type": "number",
                    "format": "number"
                },
                "base_grand_total_refunded": {
                    "description": "base_grand_total_refunded",
                    "type": "number",
                    "format": "number"
                },
                "sub_total": {
                    "description": "sub_total",
                    "type": "number",
                    "format": "number"
                },
                "base_sub_total": {
                    "description": "base_sub_total",
                    "type": "number",
                    "format": "number"
                },
                "sub_total_invoiced": {
                    "description": "sub_total_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "base_sub_total_invoiced": {
                    "description": "base_sub_total_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "sub_total_refunded": {
                    "description": "sub_total_refunded",
                    "type": "number",
                    "format": "number"
                },
                "base_sub_total_refunded": {
                    "description": "base_sub_total_refunded",
                    "type": "number",
                    "format": "number"
                },
                "discount_percent": {
                    "description": "discount_percent",
                    "type": "number",
                    "format": "number"
                },
                "discount_amount": {
                    "description": "discount_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_discount_amount": {
                    "description": "base_discount_amount",
                    "type": "number",
                    "format": "number"
                },
                "discount_invoiced": {
                    "description": "discount_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "base_discount_invoiced": {
                    "description": "base_discount_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "discount_refunded": {
                    "description": "discount_refunded",
                    "type": "number",
                    "format": "number"
                },
                "base_discount_refunded": {
                    "description": "base_discount_refunded",
                    "type": "number",
                    "format": "number"
                },
                "tax_amount": {
                    "description": "tax_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_tax_amount": {
                    "description": "base_tax_amount",
                    "type": "number",
                    "format": "number"
                },
                "tax_amount_invoiced": {
                    "description": "tax_amount_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "base_tax_amount_invoiced": {
                    "description": "base_tax_amount_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "tax_amount_refunded": {
                    "description": "tax_amount_refunded",
                    "type": "number",
                    "format": "number"
                },
                "base_tax_amount_refunded": {
                    "description": "base_tax_amount_refunded",
                    "type": "number",
                    "format": "number"
                },
                "shipping_amount": {
                    "description": "shipping_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_shipping_amount": {
                    "description": "base_shipping_amount",
                    "type": "number",
                    "format": "number"
                },
                "shipping_invoiced": {
                    "description": "shipping_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "base_shipping_invoiced": {
                    "description": "base_shipping_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "shipping_refunded": {
                    "description": "shipping_refunded",
                    "type": "number",
                    "format": "number"
                },
                "base_shipping_refunded": {
                    "description": "base_shipping_refunded",
                    "type": "number",
                    "format": "number"
                },
                "customer_id": {
                    "description": "customer_id",
                    "type": "integer",
                    "format": "int32"
                },
                "customer_type": {
                    "description": "customer_type",
                    "type": "string"
                },
                "channel_id": {
                    "description": "channel_id",
                    "type": "integer",
                    "format": "int32"
                },
                "channel_type": {
                    "description": "channel_type",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "OrderAddress": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "first_name": {
                    "description": "first_name",
                    "type": "string"
                },
                "last_name": {
                    "description": "last_name",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "address1": {
                    "description": "address1",
                    "type": "string"
                },
                "address2": {
                    "description": "address2",
                    "type": "string"
                },
                "country": {
                    "description": "country",
                    "type": "string"
                },
                "state": {
                    "description": "state",
                    "type": "string"
                },
                "city": {
                    "description": "city",
                    "type": "string"
                },
                "postcode": {
                    "description": "postcode",
                    "type": "string"
                },
                "phone": {
                    "description": "phone",
                    "type": "string"
                },
                "address_type": {
                    "description": "address_type",
                    "type": "string"
                },
                "order_id": {
                    "description": "order_id",
                    "type": "integer",
                    "format": "int32"
                },
                "customer_id": {
                    "description": "customer_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "OrderItem": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "sku": {
                    "description": "sku",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "coupon_code": {
                    "description": "coupon_code",
                    "type": "string"
                },
                "weight": {
                    "description": "weight",
                    "type": "number",
                    "format": "number"
                },
                "total_weight": {
                    "description": "total_weight",
                    "type": "number",
                    "format": "number"
                },
                "qty_ordered": {
                    "description": "qty_ordered",
                    "type": "integer",
                    "format": "int32"
                },
                "qty_shipped": {
                    "description": "qty_shipped",
                    "type": "integer",
                    "format": "int32"
                },
                "qty_invoiced": {
                    "description": "qty_invoiced",
                    "type": "integer",
                    "format": "int32"
                },
                "qty_canceled": {
                    "description": "qty_canceled",
                    "type": "integer",
                    "format": "int32"
                },
                "qty_refunded": {
                    "description": "qty_refunded",
                    "type": "integer",
                    "format": "int32"
                },
                "price": {
                    "description": "price",
                    "type": "number",
                    "format": "number"
                },
                "base_price": {
                    "description": "base_price",
                    "type": "number",
                    "format": "number"
                },
                "total": {
                    "description": "total",
                    "type": "number",
                    "format": "number"
                },
                "base_total": {
                    "description": "base_total",
                    "type": "number",
                    "format": "number"
                },
                "total_invoiced": {
                    "description": "total_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "base_total_invoiced": {
                    "description": "base_total_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "amount_refunded": {
                    "description": "amount_refunded",
                    "type": "number",
                    "format": "number"
                },
                "base_amount_refunded": {
                    "description": "base_amount_refunded",
                    "type": "number",
                    "format": "number"
                },
                "discount_percent": {
                    "description": "discount_percent",
                    "type": "number",
                    "format": "number"
                },
                "discount_amount": {
                    "description": "discount_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_discount_amount": {
                    "description": "base_discount_amount",
                    "type": "number",
                    "format": "number"
                },
                "discount_invoiced": {
                    "description": "discount_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "base_discount_invoiced": {
                    "description": "base_discount_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "discount_refunded": {
                    "description": "discount_refunded",
                    "type": "number",
                    "format": "number"
                },
                "base_discount_refunded": {
                    "description": "base_discount_refunded",
                    "type": "number",
                    "format": "number"
                },
                "tax_percent": {
                    "description": "tax_percent",
                    "type": "number",
                    "format": "number"
                },
                "tax_amount": {
                    "description": "tax_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_tax_amount": {
                    "description": "base_tax_amount",
                    "type": "number",
                    "format": "number"
                },
                "tax_amount_invoiced": {
                    "description": "tax_amount_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "base_tax_amount_invoiced": {
                    "description": "base_tax_amount_invoiced",
                    "type": "number",
                    "format": "number"
                },
                "tax_amount_refunded": {
                    "description": "tax_amount_refunded",
                    "type": "number",
                    "format": "number"
                },
                "base_tax_amount_refunded": {
                    "description": "base_tax_amount_refunded",
                    "type": "number",
                    "format": "number"
                },
                "product_id": {
                    "description": "product_id",
                    "type": "integer",
                    "format": "int32"
                },
                "product_type": {
                    "description": "product_type",
                    "type": "string"
                },
                "order_id": {
                    "description": "order_id",
                    "type": "integer",
                    "format": "int32"
                },
                "parent_id": {
                    "description": "parent_id",
                    "type": "integer",
                    "format": "int32"
                },
                "additional": {
                    "description": "additional",
                    "type": "string"
                }
            }
        },
        "OrderPayment": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "method": {
                    "description": "method",
                    "type": "string"
                },
                "method_title": {
                    "description": "method_title",
                    "type": "string"
                },
                "order_id": {
                    "description": "order_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Product": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "sku": {
                    "description": "sku",
                    "type": "string"
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "url_key": {
                    "description": "url_key",
                    "type": "string"
                },
                "new": {
                    "description": "new",
                    "type": "boolean"
                },
                "status": {
                    "description": "status",
                    "type": "boolean"
                },
                "thumbnail": {
                    "description": "thumbnail",
                    "type": "string"
                },
                "price": {
                    "description": "price",
                    "type": "number",
                    "format": "number"
                },
                "cost": {
                    "description": "cost",
                    "type": "number",
                    "format": "number"
                },
                "special_price": {
                    "description": "special_price",
                    "type": "number",
                    "format": "number"
                },
                "special_price_from": {
                    "description": "special_price_from",
                    "type": "string",
                    "format": "date"
                },
                "special_price_to": {
                    "description": "special_price_to",
                    "type": "string",
                    "format": "date"
                },
                "weight": {
                    "description": "weight",
                    "type": "number",
                    "format": "number"
                },
                "color": {
                    "description": "color",
                    "type": "string"
                },
                "size": {
                    "description": "size",
                    "type": "string"
                },
                "channel": {
                    "description": "channel",
                    "type": "string"
                },
                "short_description": {
                    "description": "short_description",
                    "type": "string"
                },
                "meta_title": {
                    "description": "meta_title",
                    "type": "string"
                },
                "meta_keywords": {
                    "description": "meta_keywords",
                    "type": "string"
                },
                "meta_description": {
                    "description": "meta_description",
                    "type": "string"
                },
                "width": {
                    "description": "width",
                    "type": "number",
                    "format": "number"
                },
                "height": {
                    "description": "height",
                    "type": "number",
                    "format": "number"
                },
                "depth": {
                    "description": "depth",
                    "type": "number",
                    "format": "number"
                },
                "min_price": {
                    "description": "min_price",
                    "type": "number",
                    "format": "number"
                },
                "max_price": {
                    "description": "max_price",
                    "type": "number",
                    "format": "number"
                },
                "visible_individually": {
                    "description": "visible_individually",
                    "type": "boolean"
                },
                "parent_id": {
                    "description": "parent_id",
                    "type": "integer",
                    "format": "int32"
                },
                "attribute_set_id": {
                    "description": "attribute_set_id",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ProductAttributeValue": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "channel": {
                    "description": "channel",
                    "type": "string"
                },
                "text_value": {
                    "description": "text_value",
                    "type": "string"
                },
                "boolean_value": {
                    "description": "boolean_value",
                    "type": "boolean"
                },
                "integer_value": {
                    "description": "integer_value",
                    "type": "integer",
                    "format": "int32"
                },
                "float_value": {
                    "description": "float_value",
                    "type": "number",
                    "format": "number"
                },
                "datetime_value": {
                    "description": "datetime_value",
                    "type": "string",
                    "format": "date-time"
                },
                "date_value": {
                    "description": "date_value",
                    "type": "string",
                    "format": "date"
                },
                "json_value": {
                    "description": "json_value",
                    "type": "string"
                },
                "product_id": {
                    "description": "product_id",
                    "type": "integer",
                    "format": "int32"
                },
                "attribute_id": {
                    "description": "attribute_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Refund": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "increment_id": {
                    "description": "increment_id",
                    "type": "string"
                },
                "state": {
                    "description": "state",
                    "type": "string"
                },
                "email_sent": {
                    "description": "email_sent",
                    "type": "boolean"
                },
                "total_qty": {
                    "description": "total_qty",
                    "type": "integer",
                    "format": "int32"
                },
                "adjustment_refund": {
                    "description": "adjustment_refund",
                    "type": "number",
                    "format": "number"
                },
                "base_adjustment_refund": {
                    "description": "base_adjustment_refund",
                    "type": "number",
                    "format": "number"
                },
                "adjustment_fee": {
                    "description": "adjustment_fee",
                    "type": "number",
                    "format": "number"
                },
                "base_adjustment_fee": {
                    "description": "base_adjustment_fee",
                    "type": "number",
                    "format": "number"
                },
                "sub_total": {
                    "description": "sub_total",
                    "type": "number",
                    "format": "number"
                },
                "base_sub_total": {
                    "description": "base_sub_total",
                    "type": "number",
                    "format": "number"
                },
                "grand_total": {
                    "description": "grand_total",
                    "type": "number",
                    "format": "number"
                },
                "base_grand_total": {
                    "description": "base_grand_total",
                    "type": "number",
                    "format": "number"
                },
                "shipping_amount": {
                    "description": "shipping_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_shipping_amount": {
                    "description": "base_shipping_amount",
                    "type": "number",
                    "format": "number"
                },
                "tax_amount": {
                    "description": "tax_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_tax_amount": {
                    "description": "base_tax_amount",
                    "type": "number",
                    "format": "number"
                },
                "discount_percent": {
                    "description": "discount_percent",
                    "type": "number",
                    "format": "number"
                },
                "discount_amount": {
                    "description": "discount_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_discount_amount": {
                    "description": "base_discount_amount",
                    "type": "number",
                    "format": "number"
                },
                "order_id": {
                    "description": "order_id",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "RefundItem": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "sku": {
                    "description": "sku",
                    "type": "string"
                },
                "qty": {
                    "description": "qty",
                    "type": "integer",
                    "format": "int32"
                },
                "price": {
                    "description": "price",
                    "type": "number",
                    "format": "number"
                },
                "base_price": {
                    "description": "base_price",
                    "type": "number",
                    "format": "number"
                },
                "total": {
                    "description": "total",
                    "type": "number",
                    "format": "number"
                },
                "base_total": {
                    "description": "base_total",
                    "type": "number",
                    "format": "number"
                },
                "tax_amount": {
                    "description": "tax_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_tax_amount": {
                    "description": "base_tax_amount",
                    "type": "number",
                    "format": "number"
                },
                "discount_percent": {
                    "description": "discount_percent",
                    "type": "number",
                    "format": "number"
                },
                "discount_amount": {
                    "description": "discount_amount",
                    "type": "number",
                    "format": "number"
                },
                "base_discount_amount": {
                    "description": "base_discount_amount",
                    "type": "number",
                    "format": "number"
                },
                "product_id": {
                    "description": "product_id",
                    "type": "integer",
                    "format": "int32"
                },
                "product_type": {
                    "description": "product_type",
                    "type": "string"
                },
                "order_item_id": {
                    "description": "order_item_id",
                    "type": "integer",
                    "format": "int32"
                },
                "refund_id": {
                    "description": "refund_id",
                    "type": "integer",
                    "format": "int32"
                },
                "parent_id": {
                    "description": "parent_id",
                    "type": "integer",
                    "format": "int32"
                },
                "additional": {
                    "description": "additional",
                    "type": "string"
                }
            }
        },
        "Shipment": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "description": "status",
                    "type": "string"
                },
                "total_qty": {
                    "description": "total_qty",
                    "type": "integer",
                    "format": "int32"
                },
                "total_weight": {
                    "description": "total_weight",
                    "type": "integer",
                    "format": "int32"
                },
                "carrier_code": {
                    "description": "carrier_code",
                    "type": "string"
                },
                "carrier_title": {
                    "description": "carrier_title",
                    "type": "string"
                },
                "track_number": {
                    "description": "track_number",
                    "type": "string"
                },
                "email_sent": {
                    "description": "email_sent",
                    "type": "boolean"
                },
                "customer_id": {
                    "description": "customer_id",
                    "type": "integer",
                    "format": "int32"
                },
                "customer_type": {
                    "description": "customer_type",
                    "type": "string"
                },
                "order_id": {
                    "description": "order_id",
                    "type": "integer",
                    "format": "int32"
                },
                "order_address_id": {
                    "description": "order_address_id",
                    "type": "integer",
                    "format": "int32"
                },
                "inventory_source_id": {
                    "description": "inventory_source_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ShipmentItem": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "sku": {
                    "description": "sku",
                    "type": "string"
                },
                "qty": {
                    "description": "qty",
                    "type": "integer",
                    "format": "int32"
                },
                "weight": {
                    "description": "weight",
                    "type": "integer",
                    "format": "int32"
                },
                "price": {
                    "description": "price",
                    "type": "number",
                    "format": "number"
                },
                "base_price": {
                    "description": "base_price",
                    "type": "number",
                    "format": "number"
                },
                "total": {
                    "description": "total",
                    "type": "number",
                    "format": "number"
                },
                "base_total": {
                    "description": "base_total",
                    "type": "number",
                    "format": "number"
                },
                "product_id": {
                    "description": "product_id",
                    "type": "integer",
                    "format": "int32"
                },
                "product_type": {
                    "description": "product_type",
                    "type": "string"
                },
                "order_item_id": {
                    "description": "order_item_id",
                    "type": "integer",
                    "format": "int32"
                },
                "shipment_id": {
                    "description": "shipment_id",
                    "type": "integer",
                    "format": "int32"
                },
                "additional": {
                    "description": "additional",
                    "type": "string"
                }
            }
        },
        "Subscriber": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "is_subscribed": {
                    "description": "is_subscribed",
                    "type": "boolean"
                },
                "token": {
                    "description": "token",
                    "type": "string"
                },
                "channel_id": {
                    "description": "channel_id",
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TaxCategory": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "channel_id": {
                    "description": "channel_id",
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "description": "code",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "description": {
                    "description": "description",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TaxRate": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "identifier": {
                    "description": "identifier",
                    "type": "string"
                },
                "is_zip": {
                    "description": "is_zip",
                    "type": "boolean"
                },
                "zip_code": {
                    "description": "zip_code",
                    "type": "string"
                },
                "zip_from": {
                    "description": "zip_from",
                    "type": "string"
                },
                "zip_to": {
                    "description": "zip_to",
                    "type": "string"
                },
                "state": {
                    "description": "state",
                    "type": "string"
                },
                "state_from": {
                    "description": "state_from",
                    "type": "string"
                },
                "state_to": {
                    "description": "state_to",
                    "type": "string"
                },
                "country": {
                    "description": "country",
                    "type": "string"
                },
                "tax_rate": {
                    "description": "tax_rate",
                    "type": "number",
                    "format": "number"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Tenant": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "company": {
                    "description": "company",
                    "type": "string"
                },
                "cnpj": {
                    "description": "cnpj",
                    "type": "string"
                },
                "cpf": {
                    "description": "cpf",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "ie": {
                    "description": "ie",
                    "type": "string"
                },
                "logo": {
                    "description": "logo",
                    "type": "string"
                },
                "address1": {
                    "description": "address1",
                    "type": "string"
                },
                "address2": {
                    "description": "address2",
                    "type": "string"
                },
                "country": {
                    "description": "country",
                    "type": "string"
                },
                "state": {
                    "description": "state",
                    "type": "string"
                },
                "city": {
                    "description": "city",
                    "type": "string"
                },
                "postcode": {
                    "description": "postcode",
                    "type": "string"
                },
                "phone": {
                    "description": "phone",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "User": {
            "required": [
                ""
            ],
            "properties": {
                "id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "email": {
                    "description": "email",
                    "type": "string"
                },
                "email_verified_at": {
                    "description": "email_verified_at",
                    "type": "string",
                    "format": "date-time"
                },
                "password": {
                    "description": "password",
                    "type": "string"
                },
                "remember_token": {
                    "description": "remember_token",
                    "type": "string"
                },
                "created_at": {
                    "description": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "description": "updated_at",
                    "type": "string",
                    "format": "date-time"
                },
                "deleted_at": {
                    "description": "deleted_at",
                    "type": "string",
                    "format": "date-time"
                },
                "tenant_id": {
                    "description": "tenant_id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        }
    }
}
