{
    "openapi": "3.0.0",
    "info": {
        "title": "FlyHub API",
        "version": "1"
    },
    "paths": {
        "/attributes": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Get a listing of the Attributes.",
                "description": "Get all Attributes",
                "operationId": "App\\Http\\Controllers\\API\\AttributeAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Store a newly created Attribute in storage",
                "description": "Store Attribute",
                "operationId": "App\\Http\\Controllers\\API\\AttributeAPIController::store",
                "requestBody": {
                    "description": "Attribute that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Attribute"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/attributes/{id}": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Display the specified Attribute",
                "description": "Get Attribute",
                "operationId": "App\\Http\\Controllers\\API\\AttributeAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Attribute",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Update the specified Attribute in storage",
                "description": "Update Attribute",
                "operationId": "App\\Http\\Controllers\\API\\AttributeAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Attribute",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attribute that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Attribute"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Remove the specified Attribute from storage",
                "description": "Delete Attribute",
                "operationId": "App\\Http\\Controllers\\API\\AttributeAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Attribute",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/attribute-sets": {
            "get": {
                "tags": [
                    "AttributeSet"
                ],
                "summary": "Get a listing of the AttributeSets.",
                "description": "Get all AttributeSets",
                "operationId": "App\\Http\\Controllers\\API\\AttributeSetAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "AttributeSet"
                ],
                "summary": "Store a newly created AttributeSet in storage",
                "description": "Store AttributeSet",
                "operationId": "App\\Http\\Controllers\\API\\AttributeSetAPIController::store",
                "requestBody": {
                    "description": "AttributeSet that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttributeSet"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/attribute-sets/{id}": {
            "get": {
                "tags": [
                    "AttributeSet"
                ],
                "summary": "Display the specified AttributeSet",
                "description": "Get AttributeSet",
                "operationId": "App\\Http\\Controllers\\API\\AttributeSetAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of AttributeSet",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "AttributeSet"
                ],
                "summary": "Update the specified AttributeSet in storage",
                "description": "Update AttributeSet",
                "operationId": "App\\Http\\Controllers\\API\\AttributeSetAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of AttributeSet",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "AttributeSet that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttributeSet"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "AttributeSet"
                ],
                "summary": "Remove the specified AttributeSet from storage",
                "description": "Delete AttributeSet",
                "operationId": "App\\Http\\Controllers\\API\\AttributeSetAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of AttributeSet",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get a listing of the Categories.",
                "description": "Get all Categories",
                "operationId": "App\\Http\\Controllers\\API\\CategoryAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Store a newly created Category in storage",
                "description": "Store Category",
                "operationId": "App\\Http\\Controllers\\API\\CategoryAPIController::store",
                "requestBody": {
                    "description": "Category that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Display the specified Category",
                "description": "Get Category",
                "operationId": "App\\Http\\Controllers\\API\\CategoryAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update the specified Category in storage",
                "description": "Update Category",
                "operationId": "App\\Http\\Controllers\\API\\CategoryAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Category that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Remove the specified Category from storage",
                "description": "Delete Category",
                "operationId": "App\\Http\\Controllers\\API\\CategoryAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/channels": {
            "get": {
                "tags": [
                    "Channel"
                ],
                "summary": "Get a listing of the Channels.",
                "description": "Get all Channels",
                "operationId": "App\\Http\\Controllers\\API\\ChannelAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Channel"
                ],
                "summary": "Store a newly created Channel in storage",
                "description": "Store Channel",
                "operationId": "App\\Http\\Controllers\\API\\ChannelAPIController::store",
                "requestBody": {
                    "description": "Channel that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Channel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/channels/{id}": {
            "get": {
                "tags": [
                    "Channel"
                ],
                "summary": "Display the specified Channel",
                "description": "Get Channel",
                "operationId": "App\\Http\\Controllers\\API\\ChannelAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Channel",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Channel"
                ],
                "summary": "Update the specified Channel in storage",
                "description": "Update Channel",
                "operationId": "App\\Http\\Controllers\\API\\ChannelAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Channel",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Channel that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Channel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Channel"
                ],
                "summary": "Remove the specified Channel from storage",
                "description": "Delete Channel",
                "operationId": "App\\Http\\Controllers\\API\\ChannelAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Channel",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/channel_categories/{channel}": {
            "get": {
                "tags": [
                    "ChannelCategory"
                ],
                "summary": "Get a listing of the Channel Categories.",
                "description": "Get all ChannelCategory",
                "operationId": "App\\Http\\Controllers\\API\\ChannelCategoryAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Channel"
                ],
                "summary": "Store a newly created ChannelCategory in storage",
                "description": "Store ChannelCategory",
                "operationId": "App\\Http\\Controllers\\API\\ChannelCategoryAPIController::store",
                "requestBody": {
                    "description": "Channel that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChannelCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/channel_categories/{channel}/{id}": {
            "get": {
                "tags": [
                    "ChannelCategory"
                ],
                "summary": "Display the specified ChannelCategory",
                "description": "Get ChannelCategory",
                "operationId": "App\\Http\\Controllers\\API\\ChannelCategoryAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ChannelCategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/channels/{channelId}/categories/{categoryId}/attributes": {
            "get": {
                "tags": [
                    "ChannelCategoryAttribute"
                ],
                "summary": "Get a listing of the Channel Category Attributes.",
                "description": "Get all ChannelCategoryAttribute",
                "operationId": "App\\Http\\Controllers\\API\\ChannelCategoryAttributeAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/channel/{channel_id}/products/{channel_product_id}": {
            "get": {
                "tags": [
                    "ChannelProduct"
                ],
                "summary": "Display the specified ChannelProduct",
                "description": "Get ChannelProduct",
                "operationId": "App\\Http\\Controllers\\API\\ChannelProductAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ChannelProduct",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "ChannelProduct"
                ],
                "summary": "Update the specified ChannelProduct in storage",
                "description": "Store ChannelProduct",
                "operationId": "App\\Http\\Controllers\\API\\ChannelProductAPIController::update",
                "requestBody": {
                    "description": "ChannelProduct that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChannelProduct"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/channel-sync-logs": {
            "get": {
                "tags": [
                    "ChannelSyncLog"
                ],
                "summary": "Get a listing of the Channel Sync Logs.",
                "description": "Get all Channel Sync Logs",
                "operationId": "App\\Http\\Controllers\\API\\ChannelSyncLogAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/channel-sync-logs/{id}": {
            "get": {
                "tags": [
                    "ChannelSyncLog"
                ],
                "summary": "Display the specified ChannelSyncLog",
                "description": "Get ChannelSyncLog",
                "operationId": "App\\Http\\Controllers\\API\\ChannelSyncLogAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ChannelSyncLog",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/channel-sync-logs/{$channelSyncLogId}/results": {
            "get": {
                "tags": [
                    "ChannelSyncLogResult"
                ],
                "summary": "Get a listing of the Channel Sync Logs.",
                "description": "Get all Channel Sync Log Results",
                "operationId": "App\\Http\\Controllers\\API\\ChannelSyncLogResultAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cities": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get a listing of the Cities.",
                "description": "Get all Cities",
                "operationId": "App\\Http\\Controllers\\API\\CityAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "City"
                ],
                "summary": "Store a newly created City in storage",
                "description": "Store City",
                "operationId": "App\\Http\\Controllers\\API\\CityAPIController::store",
                "requestBody": {
                    "description": "City that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/City"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/cities/{id}": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Display the specified City",
                "description": "Get City",
                "operationId": "App\\Http\\Controllers\\API\\CityAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of City",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "City"
                ],
                "summary": "Update the specified City in storage",
                "description": "Update City",
                "operationId": "App\\Http\\Controllers\\API\\CityAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of City",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "City that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/City"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "City"
                ],
                "summary": "Remove the specified City from storage",
                "description": "Delete City",
                "operationId": "App\\Http\\Controllers\\API\\CityAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of City",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Get a listing of the Customers.",
                "description": "Get all Customers",
                "operationId": "App\\Http\\Controllers\\API\\CustomerAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Customer"
                ],
                "summary": "Store a newly created Customer in storage",
                "description": "Store Customer",
                "operationId": "App\\Http\\Controllers\\API\\CustomerAPIController::store",
                "requestBody": {
                    "description": "Customer that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/customers/{id}": {
            "get": {
                "tags": [
                    "Customer"
                ],
                "summary": "Display the specified Customer",
                "description": "Get Customer",
                "operationId": "App\\Http\\Controllers\\API\\CustomerAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Customer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Customer"
                ],
                "summary": "Update the specified Customer in storage",
                "description": "Update Customer",
                "operationId": "App\\Http\\Controllers\\API\\CustomerAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Customer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Customer that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Customer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Customer"
                ],
                "summary": "Remove the specified Customer from storage",
                "description": "Delete Customer",
                "operationId": "App\\Http\\Controllers\\API\\CustomerAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Customer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/integrations": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Get a listing of the Integrations.",
                "description": "Get all Integrations",
                "operationId": "App\\Http\\Controllers\\API\\IntegrationAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Integration"
                ],
                "summary": "Store a newly created Integration in storage",
                "description": "Store Integration",
                "operationId": "App\\Http\\Controllers\\API\\IntegrationAPIController::store",
                "requestBody": {
                    "description": "Integration that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Integration"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/integrations/{id}": {
            "get": {
                "tags": [
                    "Integration"
                ],
                "summary": "Display the specified Integration",
                "description": "Get Integration",
                "operationId": "App\\Http\\Controllers\\API\\IntegrationAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Integration",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Integration"
                ],
                "summary": "Update the specified Integration in storage",
                "description": "Update Integration",
                "operationId": "App\\Http\\Controllers\\API\\IntegrationAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Integration",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Integration that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Integration"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Integration"
                ],
                "summary": "Remove the specified Integration from storage",
                "description": "Delete Integration",
                "operationId": "App\\Http\\Controllers\\API\\IntegrationAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Integration",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/integration-models": {
            "get": {
                "tags": [
                    "IntegrationModel"
                ],
                "summary": "Get a listing of the IntegrationModels.",
                "description": "Get all IntegrationModels",
                "operationId": "App\\Http\\Controllers\\API\\IntegrationModelAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "IntegrationModel"
                ],
                "summary": "Store a newly created IntegrationModel in storage",
                "description": "Store IntegrationModel",
                "operationId": "App\\Http\\Controllers\\API\\IntegrationModelAPIController::store",
                "requestBody": {
                    "description": "IntegrationModel that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IntegrationModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/integration-models/{id}": {
            "get": {
                "tags": [
                    "IntegrationModel"
                ],
                "summary": "Display the specified IntegrationModel",
                "description": "Get IntegrationModel",
                "operationId": "App\\Http\\Controllers\\API\\IntegrationModelAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of IntegrationModel",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "IntegrationModel"
                ],
                "summary": "Update the specified IntegrationModel in storage",
                "description": "Update IntegrationModel",
                "operationId": "App\\Http\\Controllers\\API\\IntegrationModelAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of IntegrationModel",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "IntegrationModel that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IntegrationModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "IntegrationModel"
                ],
                "summary": "Remove the specified IntegrationModel from storage",
                "description": "Delete IntegrationModel",
                "operationId": "App\\Http\\Controllers\\API\\IntegrationModelAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of IntegrationModel",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory-sources": {
            "get": {
                "tags": [
                    "InventorySource"
                ],
                "summary": "Get a listing of the InventorySources.",
                "description": "Get all InventorySources",
                "operationId": "App\\Http\\Controllers\\API\\InventorySourceAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "InventorySource"
                ],
                "summary": "Store a newly created InventorySource in storage",
                "description": "Store InventorySource",
                "operationId": "App\\Http\\Controllers\\API\\InventorySourceAPIController::store",
                "requestBody": {
                    "description": "InventorySource that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InventorySource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory-sources/{id}": {
            "get": {
                "tags": [
                    "InventorySource"
                ],
                "summary": "Display the specified InventorySource",
                "description": "Get InventorySource",
                "operationId": "App\\Http\\Controllers\\API\\InventorySourceAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of InventorySource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "InventorySource"
                ],
                "summary": "Update the specified InventorySource in storage",
                "description": "Update InventorySource",
                "operationId": "App\\Http\\Controllers\\API\\InventorySourceAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of InventorySource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "InventorySource that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InventorySource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "InventorySource"
                ],
                "summary": "Remove the specified InventorySource from storage",
                "description": "Delete InventorySource",
                "operationId": "App\\Http\\Controllers\\API\\InventorySourceAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of InventorySource",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Get a listing of the Invoices.",
                "description": "Get all Invoices",
                "operationId": "App\\Http\\Controllers\\API\\InvoiceAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Store a newly created Invoice in storage",
                "description": "Store Invoice",
                "operationId": "App\\Http\\Controllers\\API\\InvoiceAPIController::store",
                "requestBody": {
                    "description": "Invoice that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invoice"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoices/{id}": {
            "get": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Display the specified Invoice",
                "description": "Get Invoice",
                "operationId": "App\\Http\\Controllers\\API\\InvoiceAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Invoice",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Update the specified Invoice in storage",
                "description": "Update Invoice",
                "operationId": "App\\Http\\Controllers\\API\\InvoiceAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Invoice",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Invoice that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Invoice"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Remove the specified Invoice from storage",
                "description": "Delete Invoice",
                "operationId": "App\\Http\\Controllers\\API\\InvoiceAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Invoice",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/notifications/{id}": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Display the specified Notification",
                "description": "Get Notification",
                "operationId": "App\\Http\\Controllers\\API\\NotificationAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Notification",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get a listing of the Orders.",
                "description": "Get all Orders",
                "operationId": "App\\Http\\Controllers\\API\\OrderAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Store a newly created Order in storage",
                "description": "Store Order",
                "operationId": "App\\Http\\Controllers\\API\\OrderAPIController::store",
                "requestBody": {
                    "description": "Order that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Display the specified Order",
                "description": "Get Order",
                "operationId": "App\\Http\\Controllers\\API\\OrderAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Update the specified Order in storage",
                "description": "Update Order",
                "operationId": "App\\Http\\Controllers\\API\\OrderAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Order that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "Remove the specified Order from storage",
                "description": "Delete Order",
                "operationId": "App\\Http\\Controllers\\API\\OrderAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get a listing of the Products.",
                "description": "Get all Products",
                "operationId": "App\\Http\\Controllers\\API\\ProductAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Store a newly created Product in storage",
                "description": "Store Product",
                "operationId": "App\\Http\\Controllers\\API\\ProductAPIController::store",
                "requestBody": {
                    "description": "Product that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Display the specified Product",
                "description": "Get Product",
                "operationId": "App\\Http\\Controllers\\API\\ProductAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update the specified Product in storage",
                "description": "Update Product",
                "operationId": "App\\Http\\Controllers\\API\\ProductAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Product that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Remove the specified Product from storage",
                "description": "Delete Product",
                "operationId": "App\\Http\\Controllers\\API\\ProductAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/products/{productId}/channels": {
            "get": {
                "tags": [
                    "ChannelProduct"
                ],
                "summary": "Get a listing of the Channels of Products.",
                "description": "Get all Channels of Products",
                "operationId": "App\\Http\\Controllers\\API\\ProductChannelAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/products/{id}/channels": {
            "post": {
                "tags": [
                    "ChannelProduct"
                ],
                "summary": "Store a newly created ChannelProduct in storage",
                "description": "Store ChannelProduct",
                "operationId": "App\\Http\\Controllers\\API\\ProductChannelAPIController::store",
                "requestBody": {
                    "description": "Product that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChannelProduct"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/products/{id}/channels/{id}": {
            "delete": {
                "tags": [
                    "ChannelProduct"
                ],
                "summary": "Remove the specified ChannelProduct from storage",
                "description": "Delete ChannelProduct",
                "operationId": "App\\Http\\Controllers\\API\\ProductChannelAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ChannelProduct",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/products/{id}/images": {
            "post": {
                "tags": [
                    "ProductImage"
                ],
                "summary": "Store a newly created ProductImage in storage",
                "description": "Store ProductImage",
                "operationId": "App\\Http\\Controllers\\API\\ProductImageAPIController::store",
                "requestBody": {
                    "description": "Product that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductImage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/products/{id}/images/{id}": {
            "delete": {
                "tags": [
                    "ProductImage"
                ],
                "summary": "Remove the specified ProductImage from storage",
                "description": "Delete ProductImage",
                "operationId": "App\\Http\\Controllers\\API\\ProductImageAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of ProductImage",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/refunds": {
            "get": {
                "tags": [
                    "Refund"
                ],
                "summary": "Get a listing of the Refunds.",
                "description": "Get all Refunds",
                "operationId": "App\\Http\\Controllers\\API\\RefundAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Refund"
                ],
                "summary": "Store a newly created Refund in storage",
                "description": "Store Refund",
                "operationId": "App\\Http\\Controllers\\API\\RefundAPIController::store",
                "requestBody": {
                    "description": "Refund that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Refund"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/refunds/{id}": {
            "get": {
                "tags": [
                    "Refund"
                ],
                "summary": "Display the specified Refund",
                "description": "Get Refund",
                "operationId": "App\\Http\\Controllers\\API\\RefundAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Refund",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Refund"
                ],
                "summary": "Update the specified Refund in storage",
                "description": "Update Refund",
                "operationId": "App\\Http\\Controllers\\API\\RefundAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Refund",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Refund that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Refund"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Refund"
                ],
                "summary": "Remove the specified Refund from storage",
                "description": "Delete Refund",
                "operationId": "App\\Http\\Controllers\\API\\RefundAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Refund",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/shipments": {
            "get": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Get a listing of the Shipments.",
                "description": "Get all Shipments",
                "operationId": "App\\Http\\Controllers\\API\\ShipmentAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Store a newly created Shipment in storage",
                "description": "Store Shipment",
                "operationId": "App\\Http\\Controllers\\API\\ShipmentAPIController::store",
                "requestBody": {
                    "description": "Shipment that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Shipment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/shipments/{id}": {
            "get": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Display the specified Shipment",
                "description": "Get Shipment",
                "operationId": "App\\Http\\Controllers\\API\\ShipmentAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Shipment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Update the specified Shipment in storage",
                "description": "Update Shipment",
                "operationId": "App\\Http\\Controllers\\API\\ShipmentAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Shipment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Shipment that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Shipment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Remove the specified Shipment from storage",
                "description": "Delete Shipment",
                "operationId": "App\\Http\\Controllers\\API\\ShipmentAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Shipment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/states": {
            "get": {
                "tags": [
                    "State"
                ],
                "summary": "Get a listing of the States.",
                "description": "Get all States",
                "operationId": "App\\Http\\Controllers\\API\\StateAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "State"
                ],
                "summary": "Store a newly created State in storage",
                "description": "Store State",
                "operationId": "App\\Http\\Controllers\\API\\StateAPIController::store",
                "requestBody": {
                    "description": "State that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/State"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/states/{id}": {
            "get": {
                "tags": [
                    "State"
                ],
                "summary": "Display the specified State",
                "description": "Get State",
                "operationId": "App\\Http\\Controllers\\API\\StateAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of State",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "State"
                ],
                "summary": "Update the specified State in storage",
                "description": "Update State",
                "operationId": "App\\Http\\Controllers\\API\\StateAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of State",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "State that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/State"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "State"
                ],
                "summary": "Remove the specified State from storage",
                "description": "Delete State",
                "operationId": "App\\Http\\Controllers\\API\\StateAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of State",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers": {
            "get": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "Get a listing of the Subscribers.",
                "description": "Get all Subscribers",
                "operationId": "App\\Http\\Controllers\\API\\SubscriberAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "Store a newly created Subscriber in storage",
                "description": "Store Subscriber",
                "operationId": "App\\Http\\Controllers\\API\\SubscriberAPIController::store",
                "requestBody": {
                    "description": "Subscriber that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscriber"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/subscribers/{id}": {
            "get": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "Display the specified Subscriber",
                "description": "Get Subscriber",
                "operationId": "App\\Http\\Controllers\\API\\SubscriberAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Subscriber",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "Update the specified Subscriber in storage",
                "description": "Update Subscriber",
                "operationId": "App\\Http\\Controllers\\API\\SubscriberAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Subscriber",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Subscriber that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Subscriber"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Subscriber"
                ],
                "summary": "Remove the specified Subscriber from storage",
                "description": "Delete Subscriber",
                "operationId": "App\\Http\\Controllers\\API\\SubscriberAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Subscriber",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/taxes": {
            "get": {
                "tags": [
                    "Tax"
                ],
                "summary": "Get a listing of the Taxs.",
                "description": "Get all Taxs",
                "operationId": "App\\Http\\Controllers\\API\\TaxAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tax"
                ],
                "summary": "Store a newly created Tax in storage",
                "description": "Store Tax",
                "operationId": "App\\Http\\Controllers\\API\\TaxAPIController::store",
                "requestBody": {
                    "description": "Tax that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tax"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/taxes/{id}": {
            "get": {
                "tags": [
                    "Tax"
                ],
                "summary": "Display the specified Tax",
                "description": "Get Tax",
                "operationId": "App\\Http\\Controllers\\API\\TaxAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Tax",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tax"
                ],
                "summary": "Update the specified Tax in storage",
                "description": "Update Tax",
                "operationId": "App\\Http\\Controllers\\API\\TaxAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Tax",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Tax that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tax"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tax"
                ],
                "summary": "Remove the specified Tax from storage",
                "description": "Delete Tax",
                "operationId": "App\\Http\\Controllers\\API\\TaxAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Tax",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tax-groups": {
            "get": {
                "tags": [
                    "TaxGroup"
                ],
                "summary": "Get a listing of the TaxGroups.",
                "description": "Get all TaxGroups",
                "operationId": "App\\Http\\Controllers\\API\\TaxGroupAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "TaxGroup"
                ],
                "summary": "Store a newly created TaxGroup in storage",
                "description": "Store TaxGroup",
                "operationId": "App\\Http\\Controllers\\API\\TaxGroupAPIController::store",
                "requestBody": {
                    "description": "TaxGroup that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tax-groups/{id}": {
            "get": {
                "tags": [
                    "TaxGroup"
                ],
                "summary": "Display the specified TaxGroup",
                "description": "Get TaxGroup",
                "operationId": "App\\Http\\Controllers\\API\\TaxGroupAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of TaxGroup",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "TaxGroup"
                ],
                "summary": "Update the specified TaxGroup in storage",
                "description": "Update TaxGroup",
                "operationId": "App\\Http\\Controllers\\API\\TaxGroupAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of TaxGroup",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "TaxGroup that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "TaxGroup"
                ],
                "summary": "Remove the specified TaxGroup from storage",
                "description": "Delete TaxGroup",
                "operationId": "App\\Http\\Controllers\\API\\TaxGroupAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of TaxGroup",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tenants": {
            "get": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Get a listing of the Tenants.",
                "description": "Get all Tenants",
                "operationId": "App\\Http\\Controllers\\API\\TenantAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Store a newly created Tenant in storage",
                "description": "Store Tenant",
                "operationId": "App\\Http\\Controllers\\API\\TenantAPIController::store",
                "requestBody": {
                    "description": "Tenant that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tenant"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/tenants/{id}": {
            "get": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Display the specified Tenant",
                "description": "Get Tenant",
                "operationId": "App\\Http\\Controllers\\API\\TenantAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Tenant",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Update the specified Tenant in storage",
                "description": "Update Tenant",
                "operationId": "App\\Http\\Controllers\\API\\TenantAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Tenant",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Tenant that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tenant"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Remove the specified Tenant from storage",
                "description": "Delete Tenant",
                "operationId": "App\\Http\\Controllers\\API\\TenantAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of Tenant",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a listing of the Users.",
                "description": "Get all Users",
                "operationId": "App\\Http\\Controllers\\API\\UserAPIController::index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Store a newly created User in storage",
                "description": "Store User",
                "operationId": "App\\Http\\Controllers\\API\\UserAPIController::store",
                "requestBody": {
                    "description": "User that should be stored",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Display the specified User",
                "description": "Get User",
                "operationId": "App\\Http\\Controllers\\API\\UserAPIController::show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update the specified User in storage",
                "description": "Update User",
                "operationId": "App\\Http\\Controllers\\API\\UserAPIController::update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User that should be updated",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Remove the specified User from storage",
                "description": "Delete User",
                "operationId": "App\\Http\\Controllers\\API\\UserAPIController::destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of User",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Attribute": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "code": {
                        "description": "code",
                        "type": "string"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "type": {
                        "description": "type",
                        "type": "string"
                    },
                    "validation": {
                        "description": "validation",
                        "type": "string"
                    },
                    "position": {
                        "description": "position",
                        "type": "integer",
                        "format": "int32"
                    },
                    "is_required": {
                        "description": "is_required",
                        "type": "boolean"
                    },
                    "is_unique": {
                        "description": "is_unique",
                        "type": "boolean"
                    },
                    "value_per_channel": {
                        "description": "value_per_channel",
                        "type": "boolean"
                    },
                    "is_filterable": {
                        "description": "is_filterable",
                        "type": "boolean"
                    },
                    "is_configurable": {
                        "description": "is_configurable",
                        "type": "boolean"
                    },
                    "is_user_defined": {
                        "description": "is_user_defined",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Attribute"
                }
            },
            "AttributeOption": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "sort_order": {
                        "description": "sort_order",
                        "type": "integer",
                        "format": "int32"
                    },
                    "attribute_id": {
                        "description": "attribute_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "AttributeOption"
                }
            },
            "AttributeSet": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "AttributeSet"
                }
            },
            "Category": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "slug": {
                        "description": "slug",
                        "type": "string"
                    },
                    "position": {
                        "description": "position",
                        "type": "integer",
                        "format": "int32"
                    },
                    "image": {
                        "description": "image",
                        "type": "string"
                    },
                    "status": {
                        "description": "status",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "meta_title": {
                        "description": "meta_title",
                        "type": "string"
                    },
                    "meta_description": {
                        "description": "meta_description",
                        "type": "string"
                    },
                    "meta_keywords": {
                        "description": "meta_keywords",
                        "type": "string"
                    },
                    "category_id": {
                        "description": "category_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "_lft": {
                        "description": "_lft",
                        "type": "integer",
                        "format": "int32"
                    },
                    "_rgt": {
                        "description": "_rgt",
                        "type": "integer",
                        "format": "int32"
                    },
                    "parent_id": {
                        "description": "parent_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Category"
                }
            },
            "Channel": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "code": {
                        "description": "code",
                        "type": "string"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "timezone": {
                        "description": "timezone",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Channel"
                }
            },
            "ChannelCategory": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "category_id": {
                        "description": "local_category_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "remote_category_id": {
                        "description": "remote_category_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "remote_category_name": {
                        "description": "remote_category_name",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChannelCategory"
                }
            },
            "ChannelConfig": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "channel_id": {
                        "description": "channel_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "code": {
                        "description": "code",
                        "type": "string"
                    },
                    "value": {
                        "description": "value",
                        "type": "string"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChannelConfig"
                }
            },
            "ChannelCustomer": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "local_id": {
                        "description": "local_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "remote_id": {
                        "description": "remote_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChannelCustomer"
                }
            },
            "ChannelOrder": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "channel_id": {
                        "description": "channel_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "order_id": {
                        "description": "order_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "remote_order_id": {
                        "description": "remote_order_id",
                        "type": "string"
                    },
                    "active": {
                        "description": "active",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChannelOrder"
                }
            },
            "ChannelProduct": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "product_id": {
                        "description": "local_product_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "channel_product_id": {
                        "description": "channel_product_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "channel_product_name": {
                        "description": "channel_product_name",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChannelProduct"
                }
            },
            "ChannelProductAttribute": {
                "required": [
                    ""
                ],
                "properties": {
                    "channel_product_id": {
                        "description": "channel_product_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "description": "key",
                        "type": "string"
                    },
                    "value": {
                        "description": "value",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ChannelProductAttribute"
                }
            },
            "City": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "state_ibge_id": {
                        "description": "state_ibge_id",
                        "type": "string"
                    },
                    "state_code": {
                        "description": "state_code",
                        "type": "string"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "lat": {
                        "description": "lat",
                        "type": "number",
                        "format": "number"
                    },
                    "lng": {
                        "description": "lng",
                        "type": "number",
                        "format": "number"
                    },
                    "capital": {
                        "description": "capital",
                        "type": "boolean"
                    },
                    "ibge_id": {
                        "description": "ibge_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "City"
                }
            },
            "Customer": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "channel_id": {
                        "description": "channel_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "first_name": {
                        "description": "first_name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "last_name",
                        "type": "string"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "gender": {
                        "description": "gender",
                        "type": "string"
                    },
                    "birthdate": {
                        "description": "birthdate",
                        "type": "string",
                        "format": "date"
                    },
                    "email": {
                        "description": "email",
                        "type": "string"
                    },
                    "status": {
                        "description": "status",
                        "type": "boolean"
                    },
                    "subscribed_to_news_letter": {
                        "description": "subscribed_to_news_letter",
                        "type": "boolean"
                    },
                    "phone": {
                        "description": "phone",
                        "type": "string"
                    },
                    "notes": {
                        "description": "notes",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Customer"
                }
            },
            "CustomerAddress": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "customer_id": {
                        "description": "customer_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "street_name": {
                        "description": "street_name",
                        "type": "string"
                    },
                    "street_number": {
                        "description": "street_number",
                        "type": "string"
                    },
                    "country": {
                        "description": "country",
                        "type": "string"
                    },
                    "state": {
                        "description": "state",
                        "type": "string"
                    },
                    "city": {
                        "description": "city",
                        "type": "string"
                    },
                    "postcode": {
                        "description": "postcode",
                        "type": "string"
                    },
                    "phone": {
                        "description": "phone",
                        "type": "string"
                    },
                    "default_address": {
                        "description": "default_address",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CustomerAddress"
                }
            },
            "Integration": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "from": {
                        "description": "from",
                        "type": "string"
                    },
                    "local": {
                        "description": "local",
                        "type": "string"
                    },
                    "to": {
                        "description": "to",
                        "type": "string"
                    },
                    "mapping": {
                        "description": "mapping",
                        "type": "string"
                    },
                    "header_params": {
                        "description": "header_params",
                        "type": "string"
                    },
                    "query_params": {
                        "description": "query_params",
                        "type": "string"
                    },
                    "active": {
                        "description": "active",
                        "type": "boolean"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Integration"
                }
            },
            "IntegrationModel": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "select_command": {
                        "description": "select_command",
                        "type": "string"
                    },
                    "select_columns": {
                        "description": "select_columns",
                        "type": "string"
                    },
                    "insert_command": {
                        "description": "insert_command",
                        "type": "string"
                    },
                    "insert_columns": {
                        "description": "insert_columns",
                        "type": "string"
                    },
                    "update_command": {
                        "description": "update_command",
                        "type": "string"
                    },
                    "update_columns": {
                        "description": "update_columns",
                        "type": "string"
                    },
                    "delete_command": {
                        "description": "delete_command",
                        "type": "string"
                    },
                    "delete_columns": {
                        "description": "delete_columns",
                        "type": "string"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "IntegrationModel"
                }
            },
            "InventorySource": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "contact_name": {
                        "description": "contact_name",
                        "type": "string"
                    },
                    "contact_email": {
                        "description": "contact_email",
                        "type": "string"
                    },
                    "contact_number": {
                        "description": "contact_number",
                        "type": "string"
                    },
                    "country": {
                        "description": "country",
                        "type": "string"
                    },
                    "state": {
                        "description": "state",
                        "type": "string"
                    },
                    "city": {
                        "description": "city",
                        "type": "string"
                    },
                    "street": {
                        "description": "street",
                        "type": "string"
                    },
                    "postcode": {
                        "description": "postcode",
                        "type": "string"
                    },
                    "priority": {
                        "description": "priority",
                        "type": "integer",
                        "format": "int32"
                    },
                    "latitude": {
                        "description": "latitude",
                        "type": "number",
                        "format": "number"
                    },
                    "longitude": {
                        "description": "longitude",
                        "type": "number",
                        "format": "number"
                    },
                    "status": {
                        "description": "status",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "InventorySource"
                }
            },
            "Invoice": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "increment_id": {
                        "description": "increment_id",
                        "type": "string"
                    },
                    "state": {
                        "description": "state",
                        "type": "string"
                    },
                    "email_sent": {
                        "description": "email_sent",
                        "type": "boolean"
                    },
                    "total_qty": {
                        "description": "total_qty",
                        "type": "integer",
                        "format": "int32"
                    },
                    "sub_total": {
                        "description": "sub_total",
                        "type": "number",
                        "format": "number"
                    },
                    "grand_total": {
                        "description": "grand_total",
                        "type": "number",
                        "format": "number"
                    },
                    "shipping_amount": {
                        "description": "shipping_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "tax_amount": {
                        "description": "tax_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_amount": {
                        "description": "discount_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "order_id": {
                        "description": "order_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "order_address_id": {
                        "description": "order_address_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "transaction_id": {
                        "description": "transaction_id",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Invoice"
                }
            },
            "InvoiceItem": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "sku": {
                        "description": "sku",
                        "type": "string"
                    },
                    "qty": {
                        "description": "qty",
                        "type": "integer",
                        "format": "int32"
                    },
                    "price": {
                        "description": "price",
                        "type": "number",
                        "format": "number"
                    },
                    "base_price": {
                        "description": "base_price",
                        "type": "number",
                        "format": "number"
                    },
                    "total": {
                        "description": "total",
                        "type": "number",
                        "format": "number"
                    },
                    "base_total": {
                        "description": "base_total",
                        "type": "number",
                        "format": "number"
                    },
                    "tax_amount": {
                        "description": "tax_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "base_tax_amount": {
                        "description": "base_tax_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "product_id": {
                        "description": "product_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "product_type": {
                        "description": "product_type",
                        "type": "string"
                    },
                    "order_item_id": {
                        "description": "order_item_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "invoice_id": {
                        "description": "invoice_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "parent_id": {
                        "description": "parent_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "additional": {
                        "description": "additional",
                        "type": "string"
                    },
                    "discount_percent": {
                        "description": "discount_percent",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_amount": {
                        "description": "discount_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "base_discount_amount": {
                        "description": "base_discount_amount",
                        "type": "number",
                        "format": "number"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "InvoiceItem"
                }
            },
            "Order": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "increment_id": {
                        "description": "increment_id",
                        "type": "string"
                    },
                    "status": {
                        "description": "status",
                        "type": "string"
                    },
                    "channel_name": {
                        "description": "channel_name",
                        "type": "string"
                    },
                    "is_guest": {
                        "description": "is_guest",
                        "type": "boolean"
                    },
                    "customer_email": {
                        "description": "customer_email",
                        "type": "string"
                    },
                    "customer_first_name": {
                        "description": "customer_first_name",
                        "type": "string"
                    },
                    "customer_last_name": {
                        "description": "customer_last_name",
                        "type": "string"
                    },
                    "shipping_method": {
                        "description": "shipping_method",
                        "type": "string"
                    },
                    "coupon_code": {
                        "description": "coupon_code",
                        "type": "string"
                    },
                    "is_gift": {
                        "description": "is_gift",
                        "type": "boolean"
                    },
                    "total_item_count": {
                        "description": "total_item_count",
                        "type": "integer",
                        "format": "int32"
                    },
                    "total_qty_ordered": {
                        "description": "total_qty_ordered",
                        "type": "integer",
                        "format": "int32"
                    },
                    "grand_total": {
                        "description": "grand_total",
                        "type": "number",
                        "format": "number"
                    },
                    "grand_total_invoiced": {
                        "description": "grand_total_invoiced",
                        "type": "number",
                        "format": "number"
                    },
                    "grand_total_refunded": {
                        "description": "grand_total_refunded",
                        "type": "number",
                        "format": "number"
                    },
                    "sub_total": {
                        "description": "sub_total",
                        "type": "number",
                        "format": "number"
                    },
                    "sub_total_invoiced": {
                        "description": "sub_total_invoiced",
                        "type": "number",
                        "format": "number"
                    },
                    "sub_total_refunded": {
                        "description": "sub_total_refunded",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_percent": {
                        "description": "discount_percent",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_amount": {
                        "description": "discount_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_invoiced": {
                        "description": "discount_invoiced",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_refunded": {
                        "description": "discount_refunded",
                        "type": "number",
                        "format": "number"
                    },
                    "tax_amount": {
                        "description": "tax_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "tax_amount_invoiced": {
                        "description": "tax_amount_invoiced",
                        "type": "number",
                        "format": "number"
                    },
                    "tax_amount_refunded": {
                        "description": "tax_amount_refunded",
                        "type": "number",
                        "format": "number"
                    },
                    "shipping_amount": {
                        "description": "shipping_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "shipping_invoiced": {
                        "description": "shipping_invoiced",
                        "type": "number",
                        "format": "number"
                    },
                    "shipping_refunded": {
                        "description": "shipping_refunded",
                        "type": "number",
                        "format": "number"
                    },
                    "customer_id": {
                        "description": "customer_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "customer_type": {
                        "description": "customer_type",
                        "type": "string"
                    },
                    "channel_id": {
                        "description": "channel_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "channel_order_id": {
                        "description": "channel_order_id",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Order"
                }
            },
            "OrderAddress": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "first_name": {
                        "description": "first_name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "last_name",
                        "type": "string"
                    },
                    "email": {
                        "description": "email",
                        "type": "string"
                    },
                    "street_name": {
                        "description": "street_name",
                        "type": "string"
                    },
                    "street_number": {
                        "description": "street_number",
                        "type": "string"
                    },
                    "country": {
                        "description": "country",
                        "type": "string"
                    },
                    "state": {
                        "description": "state",
                        "type": "string"
                    },
                    "city": {
                        "description": "city",
                        "type": "string"
                    },
                    "postcode": {
                        "description": "postcode",
                        "type": "string"
                    },
                    "phone": {
                        "description": "phone",
                        "type": "string"
                    },
                    "address_type": {
                        "description": "address_type",
                        "type": "string"
                    },
                    "order_id": {
                        "description": "order_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "customer_id": {
                        "description": "customer_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OrderAddress"
                }
            },
            "OrderItem": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "sku": {
                        "description": "sku",
                        "type": "string"
                    },
                    "type": {
                        "description": "type",
                        "type": "string"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "coupon_code": {
                        "description": "coupon_code",
                        "type": "string"
                    },
                    "weight": {
                        "description": "weight",
                        "type": "number",
                        "format": "number"
                    },
                    "total_weight": {
                        "description": "total_weight",
                        "type": "number",
                        "format": "number"
                    },
                    "qty_ordered": {
                        "description": "qty_ordered",
                        "type": "integer",
                        "format": "int32"
                    },
                    "qty_shipped": {
                        "description": "qty_shipped",
                        "type": "integer",
                        "format": "int32"
                    },
                    "qty_invoiced": {
                        "description": "qty_invoiced",
                        "type": "integer",
                        "format": "int32"
                    },
                    "qty_canceled": {
                        "description": "qty_canceled",
                        "type": "integer",
                        "format": "int32"
                    },
                    "qty_refunded": {
                        "description": "qty_refunded",
                        "type": "integer",
                        "format": "int32"
                    },
                    "price": {
                        "description": "price",
                        "type": "number",
                        "format": "number"
                    },
                    "base_price": {
                        "description": "base_price",
                        "type": "number",
                        "format": "number"
                    },
                    "total": {
                        "description": "total",
                        "type": "number",
                        "format": "number"
                    },
                    "base_total": {
                        "description": "base_total",
                        "type": "number",
                        "format": "number"
                    },
                    "total_invoiced": {
                        "description": "total_invoiced",
                        "type": "number",
                        "format": "number"
                    },
                    "base_total_invoiced": {
                        "description": "base_total_invoiced",
                        "type": "number",
                        "format": "number"
                    },
                    "amount_refunded": {
                        "description": "amount_refunded",
                        "type": "number",
                        "format": "number"
                    },
                    "base_amount_refunded": {
                        "description": "base_amount_refunded",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_percent": {
                        "description": "discount_percent",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_amount": {
                        "description": "discount_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "base_discount_amount": {
                        "description": "base_discount_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_invoiced": {
                        "description": "discount_invoiced",
                        "type": "number",
                        "format": "number"
                    },
                    "base_discount_invoiced": {
                        "description": "base_discount_invoiced",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_refunded": {
                        "description": "discount_refunded",
                        "type": "number",
                        "format": "number"
                    },
                    "base_discount_refunded": {
                        "description": "base_discount_refunded",
                        "type": "number",
                        "format": "number"
                    },
                    "tax_percent": {
                        "description": "tax_percent",
                        "type": "number",
                        "format": "number"
                    },
                    "tax_amount": {
                        "description": "tax_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "base_tax_amount": {
                        "description": "base_tax_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "tax_amount_invoiced": {
                        "description": "tax_amount_invoiced",
                        "type": "number",
                        "format": "number"
                    },
                    "base_tax_amount_invoiced": {
                        "description": "base_tax_amount_invoiced",
                        "type": "number",
                        "format": "number"
                    },
                    "tax_amount_refunded": {
                        "description": "tax_amount_refunded",
                        "type": "number",
                        "format": "number"
                    },
                    "base_tax_amount_refunded": {
                        "description": "base_tax_amount_refunded",
                        "type": "number",
                        "format": "number"
                    },
                    "product_id": {
                        "description": "product_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "product_type": {
                        "description": "product_type",
                        "type": "string"
                    },
                    "order_id": {
                        "description": "order_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "parent_id": {
                        "description": "parent_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "additional": {
                        "description": "additional",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OrderItem"
                }
            },
            "OrderPayment": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "method": {
                        "description": "method",
                        "type": "string"
                    },
                    "method_title": {
                        "description": "method_title",
                        "type": "string"
                    },
                    "order_id": {
                        "description": "order_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OrderPayment"
                }
            },
            "Product": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "sku": {
                        "description": "sku",
                        "type": "string"
                    },
                    "type": {
                        "description": "type",
                        "type": "string"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "short_description": {
                        "description": "short_description",
                        "type": "string"
                    },
                    "new": {
                        "description": "new",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "status",
                        "type": "boolean"
                    },
                    "thumbnail": {
                        "description": "thumbnail",
                        "type": "string"
                    },
                    "price": {
                        "description": "price",
                        "type": "number",
                        "format": "number"
                    },
                    "cost": {
                        "description": "cost",
                        "type": "number",
                        "format": "number"
                    },
                    "special_price": {
                        "description": "special_price",
                        "type": "number",
                        "format": "number"
                    },
                    "special_price_from": {
                        "description": "special_price_from",
                        "type": "string",
                        "format": "date"
                    },
                    "special_price_to": {
                        "description": "special_price_to",
                        "type": "string",
                        "format": "date"
                    },
                    "gross_weight": {
                        "description": "gross_weight",
                        "type": "number",
                        "format": "number"
                    },
                    "net_weight": {
                        "description": "net_weight",
                        "type": "number",
                        "format": "number"
                    },
                    "unit": {
                        "description": "unit",
                        "type": "string"
                    },
                    "color": {
                        "description": "color",
                        "type": "string"
                    },
                    "size": {
                        "description": "size",
                        "type": "string"
                    },
                    "brand": {
                        "description": "brand",
                        "type": "string"
                    },
                    "active_channels": {
                        "description": "active_channels",
                        "type": "string"
                    },
                    "remote_id": {
                        "description": "remote_id",
                        "type": "string"
                    },
                    "width": {
                        "description": "width",
                        "type": "number",
                        "format": "number"
                    },
                    "height": {
                        "description": "height",
                        "type": "number",
                        "format": "number"
                    },
                    "depth": {
                        "description": "depth",
                        "type": "number",
                        "format": "number"
                    },
                    "min_price": {
                        "description": "min_price",
                        "type": "number",
                        "format": "number"
                    },
                    "max_price": {
                        "description": "max_price",
                        "type": "number",
                        "format": "number"
                    },
                    "ncm": {
                        "description": "ncm",
                        "type": "string"
                    },
                    "gtin": {
                        "description": "gtin",
                        "type": "string"
                    },
                    "mpm": {
                        "description": "mpm",
                        "type": "string"
                    },
                    "parent_id": {
                        "description": "parent_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "main_category_id": {
                        "description": "main_category_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "attribute_set_id": {
                        "description": "attribute_set_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product"
                }
            },
            "ProductAttribute": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "value": {
                        "description": "text_value",
                        "type": "string"
                    },
                    "product_id": {
                        "description": "product_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "attribute_id": {
                        "description": "attribute_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "channel_id": {
                        "description": "channel_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProductAttribute"
                }
            },
            "ProductImage": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "description": "type",
                        "type": "string"
                    },
                    "path": {
                        "description": "path",
                        "type": "string"
                    },
                    "product_id": {
                        "description": "product_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "channel_id": {
                        "description": "channel_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProductImage"
                }
            },
            "ProductTaxValue": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "tag": {
                        "description": "tag",
                        "type": "string"
                    },
                    "manual": {
                        "description": "manual",
                        "type": "string"
                    },
                    "string_value": {
                        "description": "string_value",
                        "type": "boolean"
                    },
                    "double_value": {
                        "description": "double_value",
                        "type": "number",
                        "format": "number"
                    },
                    "integer_value": {
                        "description": "integer_value",
                        "type": "integer",
                        "format": "int32"
                    },
                    "formula": {
                        "description": "formula",
                        "type": "string",
                        "format": "string"
                    },
                    "formula_values": {
                        "description": "formula_values",
                        "type": "string",
                        "format": "string"
                    },
                    "product_id": {
                        "description": "product_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "tax_id": {
                        "description": "tax_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "tax_group_id": {
                        "description": "tax_group_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProductTaxValue"
                }
            },
            "Refund": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "increment_id": {
                        "description": "increment_id",
                        "type": "string"
                    },
                    "state": {
                        "description": "state",
                        "type": "string"
                    },
                    "email_sent": {
                        "description": "email_sent",
                        "type": "boolean"
                    },
                    "total_qty": {
                        "description": "total_qty",
                        "type": "integer",
                        "format": "int32"
                    },
                    "adjustment_refund": {
                        "description": "adjustment_refund",
                        "type": "number",
                        "format": "number"
                    },
                    "base_adjustment_refund": {
                        "description": "base_adjustment_refund",
                        "type": "number",
                        "format": "number"
                    },
                    "adjustment_fee": {
                        "description": "adjustment_fee",
                        "type": "number",
                        "format": "number"
                    },
                    "base_adjustment_fee": {
                        "description": "base_adjustment_fee",
                        "type": "number",
                        "format": "number"
                    },
                    "sub_total": {
                        "description": "sub_total",
                        "type": "number",
                        "format": "number"
                    },
                    "base_sub_total": {
                        "description": "base_sub_total",
                        "type": "number",
                        "format": "number"
                    },
                    "grand_total": {
                        "description": "grand_total",
                        "type": "number",
                        "format": "number"
                    },
                    "base_grand_total": {
                        "description": "base_grand_total",
                        "type": "number",
                        "format": "number"
                    },
                    "shipping_amount": {
                        "description": "shipping_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "base_shipping_amount": {
                        "description": "base_shipping_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "tax_amount": {
                        "description": "tax_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "base_tax_amount": {
                        "description": "base_tax_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_percent": {
                        "description": "discount_percent",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_amount": {
                        "description": "discount_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "base_discount_amount": {
                        "description": "base_discount_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "order_id": {
                        "description": "order_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Refund"
                }
            },
            "RefundItem": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "sku": {
                        "description": "sku",
                        "type": "string"
                    },
                    "qty": {
                        "description": "qty",
                        "type": "integer",
                        "format": "int32"
                    },
                    "price": {
                        "description": "price",
                        "type": "number",
                        "format": "number"
                    },
                    "base_price": {
                        "description": "base_price",
                        "type": "number",
                        "format": "number"
                    },
                    "total": {
                        "description": "total",
                        "type": "number",
                        "format": "number"
                    },
                    "base_total": {
                        "description": "base_total",
                        "type": "number",
                        "format": "number"
                    },
                    "tax_amount": {
                        "description": "tax_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "base_tax_amount": {
                        "description": "base_tax_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_percent": {
                        "description": "discount_percent",
                        "type": "number",
                        "format": "number"
                    },
                    "discount_amount": {
                        "description": "discount_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "base_discount_amount": {
                        "description": "base_discount_amount",
                        "type": "number",
                        "format": "number"
                    },
                    "product_id": {
                        "description": "product_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "product_type": {
                        "description": "product_type",
                        "type": "string"
                    },
                    "order_item_id": {
                        "description": "order_item_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "refund_id": {
                        "description": "refund_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "parent_id": {
                        "description": "parent_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "additional": {
                        "description": "additional",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "RefundItem"
                }
            },
            "Shipment": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "description": "status",
                        "type": "string"
                    },
                    "total_qty": {
                        "description": "total_qty",
                        "type": "integer",
                        "format": "int32"
                    },
                    "total_weight": {
                        "description": "total_weight",
                        "type": "integer",
                        "format": "int32"
                    },
                    "carrier_code": {
                        "description": "carrier_code",
                        "type": "string"
                    },
                    "carrier_title": {
                        "description": "carrier_title",
                        "type": "string"
                    },
                    "track_number": {
                        "description": "track_number",
                        "type": "string"
                    },
                    "email_sent": {
                        "description": "email_sent",
                        "type": "boolean"
                    },
                    "customer_id": {
                        "description": "customer_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "customer_type": {
                        "description": "customer_type",
                        "type": "string"
                    },
                    "order_id": {
                        "description": "order_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "order_address_id": {
                        "description": "order_address_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "inventory_source_id": {
                        "description": "inventory_source_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Shipment"
                }
            },
            "ShipmentItem": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "sku": {
                        "description": "sku",
                        "type": "string"
                    },
                    "qty": {
                        "description": "qty",
                        "type": "integer",
                        "format": "int32"
                    },
                    "weight": {
                        "description": "weight",
                        "type": "integer",
                        "format": "int32"
                    },
                    "price": {
                        "description": "price",
                        "type": "number",
                        "format": "number"
                    },
                    "base_price": {
                        "description": "base_price",
                        "type": "number",
                        "format": "number"
                    },
                    "total": {
                        "description": "total",
                        "type": "number",
                        "format": "number"
                    },
                    "base_total": {
                        "description": "base_total",
                        "type": "number",
                        "format": "number"
                    },
                    "product_id": {
                        "description": "product_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "product_type": {
                        "description": "product_type",
                        "type": "string"
                    },
                    "order_item_id": {
                        "description": "order_item_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "shipment_id": {
                        "description": "shipment_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "additional": {
                        "description": "additional",
                        "type": "string"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ShipmentItem"
                }
            },
            "State": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "country_code": {
                        "description": "country_code",
                        "type": "string"
                    },
                    "code": {
                        "description": "code",
                        "type": "string"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "ibge_id": {
                        "description": "ibge_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "lat": {
                        "description": "lat",
                        "type": "number",
                        "format": "number"
                    },
                    "lng": {
                        "description": "lng",
                        "type": "number",
                        "format": "number"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "State"
                }
            },
            "Subscriber": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "email": {
                        "description": "email",
                        "type": "string"
                    },
                    "is_subscribed": {
                        "description": "is_subscribed",
                        "type": "boolean"
                    },
                    "token": {
                        "description": "token",
                        "type": "string"
                    },
                    "channel_id": {
                        "description": "channel_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Subscriber"
                }
            },
            "Tax": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "identifier": {
                        "description": "identifier",
                        "type": "string"
                    },
                    "is_zip": {
                        "description": "is_zip",
                        "type": "boolean"
                    },
                    "zip_code": {
                        "description": "zip_code",
                        "type": "string"
                    },
                    "zip_from": {
                        "description": "zip_from",
                        "type": "string"
                    },
                    "zip_to": {
                        "description": "zip_to",
                        "type": "string"
                    },
                    "state": {
                        "description": "state",
                        "type": "string"
                    },
                    "state_from": {
                        "description": "state_from",
                        "type": "string"
                    },
                    "state_to": {
                        "description": "state_to",
                        "type": "string"
                    },
                    "country": {
                        "description": "country",
                        "type": "string"
                    },
                    "tax_rate": {
                        "description": "tax_rate",
                        "type": "number",
                        "format": "number"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Tax"
                }
            },
            "TaxGroup": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "code": {
                        "description": "code",
                        "type": "string"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "description": {
                        "description": "description",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TaxGroup"
                }
            },
            "TaxGroupMapping": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "tax_group_id": {
                        "description": "tax_group_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "tax_id": {
                        "description": "tax_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "position": {
                        "description": "position",
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TaxGroupMapping"
                }
            },
            "TaxOption": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "value": {
                        "description": "value",
                        "type": "string"
                    },
                    "tax_id": {
                        "description": "tax_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TaxOption"
                }
            },
            "Tenant": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "company": {
                        "description": "company",
                        "type": "string"
                    },
                    "cpf_cnpj": {
                        "description": "cpf_cnpj",
                        "type": "string"
                    },
                    "email": {
                        "description": "email",
                        "type": "string"
                    },
                    "ie": {
                        "description": "ie",
                        "type": "string"
                    },
                    "logo": {
                        "description": "logo",
                        "type": "string"
                    },
                    "phone": {
                        "description": "phone",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Tenant"
                }
            },
            "TenantAddress": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "street_name": {
                        "description": "street_name",
                        "type": "string"
                    },
                    "street_number": {
                        "description": "street_number",
                        "type": "string"
                    },
                    "country": {
                        "description": "country",
                        "type": "string"
                    },
                    "state": {
                        "description": "state",
                        "type": "string"
                    },
                    "city": {
                        "description": "city",
                        "type": "string"
                    },
                    "postcode": {
                        "description": "postcode",
                        "type": "string"
                    },
                    "phone": {
                        "description": "phone",
                        "type": "string"
                    },
                    "default_address": {
                        "description": "default_address",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "TenantAddress"
                }
            },
            "User": {
                "required": [
                    ""
                ],
                "properties": {
                    "id": {
                        "description": "id",
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "description": "name",
                        "type": "string"
                    },
                    "email": {
                        "description": "email",
                        "type": "string"
                    },
                    "email_verified_at": {
                        "description": "email_verified_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "password": {
                        "description": "password",
                        "type": "string"
                    },
                    "remember_token": {
                        "description": "remember_token",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "created_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "updated_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "deleted_at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "tenant_id": {
                        "description": "tenant_id",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        }
    },
    "security": [
        []
    ]
}